/*
 * Distributed Durable Timer Service API
 *
 * A distributed, durable timer service that can schedule and execute HTTP webhook callbacks  at specified times with high reliability and scalability.  ## Features - Create one-time timers with custom payloads - Durable persistence across service restarts - At-least-once delivery semantics - Configurable retry policies and timeouts - Timer modification and cancellation - Callback response can update timer schedule
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package genapi

import (
	"time"
)

type CreateTimerRequest struct {

	// Unique identifier for the timer (used for deduplication)
	Id string `json:"id"`

	// Group identifier for the timer. It is used for scalability. Must be one of the groupIds enabled in the system. Must be provided in read/write operation requests for lookup. If not provided, the timer will be created in the default group configured in the system.
	GroupId string `json:"groupId,omitempty"`

	// ISO 8601 timestamp when the timer should execute
	ExecuteAt time.Time `json:"executeAt"`

	// HTTP URL to call when the timer executes, returning 200 with CallbackResponse means success, otherwise will be retried.
	CallbackUrl string `json:"callbackUrl"`

	// Custom JSON payload to include in the callback
	Payload map[string]interface{} `json:"payload,omitempty"`

	RetryPolicy RetryPolicy `json:"retryPolicy,omitempty"`

	// Timeout for the HTTP callback (e.g., \"30s\", \"5m\")
	CallbackTimeout string `json:"callbackTimeout,omitempty"`
}
