version: '3.8'

services:
  # Cassandra Database
  cassandra:
    image: cassandra:5
    container_name: timer-cassandra
    hostname: cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=timer_cluster
      - CASSANDRA_DATACENTER=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
    ports:
      - "9042:9042"   # CQL native transport
    networks:
      - timer-network
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Cassandra Initialization, use the init script to create the keyspace and tables
  cassandra-init:
    image: cassandra:4.1 # use the same image as cassandra, so that the init script is compatible
    container_name: cassandra-init
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./scripts/cassandra-init.cql:/init.cql:ro
      - ../server/databases/cassandra/schema/v1.cql:/v1-schema.cql:ro
    networks:
      - timer-network
    entrypoint: |
      bash -c "
        echo 'Waiting for Cassandra to be ready...'
        until cqlsh cassandra -e 'describe keyspaces' > /dev/null 2>&1; do
          echo 'Cassandra not ready yet, waiting...'
          sleep 2
        done
        echo 'Cassandra is ready, executing initialization script...'
        cqlsh cassandra -f /init.cql
        cqlsh cassandra -k timer_service -f /v1-schema.cql
        echo 'Cassandra initialization completed!'
      "
    restart: "no"

networks:
  timer-network:
    driver: bridge